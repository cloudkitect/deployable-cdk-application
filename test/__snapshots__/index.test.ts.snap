// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`No stack pattern build workflow 1`] = `
"# ~~ Generated by projen. To modify, edit .projenrc.ts and run "npx projen".

name: build
on:
  pull_request: {}
  workflow_dispatch: {}
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    outputs:
      self_mutation_happened: \${{ steps.self_mutation.outputs.self_mutation_happened }}
    env:
      CI: "true"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: \${{ github.event.pull_request.head.ref }}
          repository: \${{ github.event.pull_request.head.repo.full_name }}
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: "9"
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 14.18.1
      - name: Install dependencies
        run: pnpm i --no-frozen-lockfile
      - name: build
        run: npx projen build
      - name: Assume AWS Role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: role
          aws-region: us-east-1
          role-session-name: DevSession
      - name: Deployment to Dev
        run: pnpm deploy:Dev
      - name: Find mutations
        id: self_mutation
        run: |-
          git add .
          git diff --staged --patch --exit-code > .repo.patch || echo "self_mutation_happened=true" >> $GITHUB_OUTPUT
        working-directory: ./
      - name: Upload patch
        if: steps.self_mutation.outputs.self_mutation_happened
        uses: actions/upload-artifact@v4
        with:
          name: .repo.patch
          path: .repo.patch
          overwrite: true
      - name: Fail build on mutation
        if: steps.self_mutation.outputs.self_mutation_happened
        run: |-
          echo "::error::Files were changed during build (see build log). If this was triggered from a fork, you will need to update your branch."
          cat .repo.patch
          exit 1
  self-mutation:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: always() && needs.build.outputs.self_mutation_happened && !(github.event.pull_request.head.repo.full_name != github.repository)
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: \${{ secrets.PROJEN_GITHUB_TOKEN }}
          ref: \${{ github.event.pull_request.head.ref }}
          repository: \${{ github.event.pull_request.head.repo.full_name }}
      - name: Download patch
        uses: actions/download-artifact@v4
        with:
          name: .repo.patch
          path: \${{ runner.temp }}
      - name: Apply patch
        run: '[ -s \${{ runner.temp }}/.repo.patch ] && git apply \${{ runner.temp }}/.repo.patch || echo "Empty patch. Skipping."'
      - name: Set git identity
        run: |-
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
      - name: Push changes
        env:
          PULL_REQUEST_REF: \${{ github.event.pull_request.head.ref }}
        run: |-
          git add .
          git commit -s -m "chore: self mutation"
          git push origin HEAD:$PULL_REQUEST_REF
"
`;

exports[`No stack pattern deploy to prod workflow 1`] = `
"# ~~ Generated by projen. To modify, edit .projenrc.ts and run "npx projen".

name: prod-deployment-workflow
on:
  workflow_dispatch:
    inputs:
      tag:
        description: Version tag to deploy to Prod
        required: true
jobs:
  deploy_to_Prod:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      deployments: read
      id-token: write
      issues: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
      - name: Get tag
        id: get_tag
        run: |-
          if [ -z "\${{ github.event.inputs.tag }}" ]; then 
           CURRENT_TAG=$(git describe --tags $(git rev-list --tags --max-count=1)) 
           echo "CURRENT_TAG=$CURRENT_TAG" >> $GITHUB_ENV 
          else 
           echo "CURRENT_TAG=\${{ github.event.inputs.tag }}" >> $GITHUB_ENV 
          fi
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: \${{ env.CURRENT_TAG }}
          fetch-depth: 0
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: "9"
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 14.18.1
      - name: Install dependencies
        run: pnpm i --frozen-lockfile
      - name: Assume AWS Role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: role2
          aws-region: us-east-1
          role-session-name: ProdSession
      - name: Deployment to Prod
        run: pnpm deploy:Prod
"
`;

exports[`No stack pattern deploy to uat workflow 1`] = `
"# ~~ Generated by projen. To modify, edit .projenrc.ts and run "npx projen".

name: uat-deployment-workflow
on:
  workflow_dispatch:
    inputs:
      tag:
        description: Version tag to deploy to Uat
        required: true
jobs:
  deploy_to_Uat:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      deployments: read
      id-token: write
      issues: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
      - name: Get tag
        id: get_tag
        run: |-
          if [ -z "\${{ github.event.inputs.tag }}" ]; then 
           CURRENT_TAG=$(git describe --tags $(git rev-list --tags --max-count=1)) 
           echo "CURRENT_TAG=$CURRENT_TAG" >> $GITHUB_ENV 
          else 
           echo "CURRENT_TAG=\${{ github.event.inputs.tag }}" >> $GITHUB_ENV 
          fi
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: \${{ env.CURRENT_TAG }}
          fetch-depth: 0
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: "9"
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 14.18.1
      - name: Install dependencies
        run: pnpm i --frozen-lockfile
      - name: Assume AWS Role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: role2
          aws-region: us-east-1
          role-session-name: UatSession
      - name: Deployment to Uat
        run: pnpm deploy:Uat
"
`;

exports[`No stack pattern release workflow 1`] = `
"# ~~ Generated by projen. To modify, edit .projenrc.ts and run "npx projen".

name: release
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      latest_commit: \${{ steps.git_remote.outputs.latest_commit }}
      tag_exists: \${{ steps.check_tag_exists.outputs.exists }}
    env:
      CI: "true"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set git identity
        run: |-
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: "9"
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 14.18.1
      - name: Install dependencies
        run: pnpm i --frozen-lockfile
      - name: release
        run: npx projen release
      - name: Check if version has already been tagged
        id: check_tag_exists
        run: |-
          TAG=$(cat dist/releasetag.txt)
          ([ ! -z "$TAG" ] && git ls-remote -q --exit-code --tags origin $TAG && (echo "exists=true" >> $GITHUB_OUTPUT)) || (echo "exists=false" >> $GITHUB_OUTPUT)
          cat $GITHUB_OUTPUT
      - name: Check for new commits
        id: git_remote
        run: |-
          echo "latest_commit=$(git ls-remote origin -h \${{ github.ref }} | cut -f1)" >> $GITHUB_OUTPUT
          cat $GITHUB_OUTPUT
      - name: Backup artifact permissions
        if: \${{ steps.git_remote.outputs.latest_commit == github.sha }}
        run: cd dist && getfacl -R . > permissions-backup.acl
        continue-on-error: true
      - name: Upload artifact
        if: \${{ steps.git_remote.outputs.latest_commit == github.sha }}
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: dist
          overwrite: true
  release_github:
    name: Publish to GitHub Releases
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: needs.release.outputs.tag_exists != 'true' && needs.release.outputs.latest_commit == github.sha
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 14.18.1
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: dist
      - name: Restore build artifact permissions
        run: cd dist && setfacl --restore=permissions-backup.acl
        continue-on-error: true
      - name: Release
        env:
          GITHUB_TOKEN: \${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: \${{ github.repository }}
          GITHUB_REF: \${{ github.sha }}
        run: errout=$(mktemp); gh release create $(cat dist/releasetag.txt) -R $GITHUB_REPOSITORY -F dist/changelog.md -t $(cat dist/releasetag.txt) --target $GITHUB_REF 2> $errout && true; exitcode=$?; if [ $exitcode -ne 0 ] && ! grep -q "Release.tag_name already exists" $errout; then cat $errout; exit $exitcode; fi
  deploy_to_Test:
    needs: release_github
    runs-on: ubuntu-latest
    permissions:
      contents: write
      deployments: read
      id-token: write
      issues: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
      - name: Get tag
        id: get_tag
        run: |-
          if [ -z "\${{ github.event.inputs.tag }}" ]; then 
           CURRENT_TAG=$(git describe --tags $(git rev-list --tags --max-count=1)) 
           echo "CURRENT_TAG=$CURRENT_TAG" >> $GITHUB_ENV 
          else 
           echo "CURRENT_TAG=\${{ github.event.inputs.tag }}" >> $GITHUB_ENV 
          fi
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: \${{ env.CURRENT_TAG }}
          fetch-depth: 0
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: "9"
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 14.18.1
      - name: Install dependencies
        run: pnpm i --frozen-lockfile
      - name: Assume AWS Role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: role
          aws-region: us-east-1
          role-session-name: TestSession
      - name: Deployment to Test
        run: pnpm deploy:Test
"
`;
